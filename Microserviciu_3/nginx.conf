worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # Upstream pentru serverul gRPC
    upstream grpc_backend {
        server idm_service:50051;
    }

    # Upstream pentru serverul HTTP (idm_api)
    upstream rest_backend {
        server idm_api:8080;
    }

    # Server pentru gRPC
    server {
        listen 81 http2; # HTTP/2 este obligatoriu pentru gRPC

        location / {
            # Proxy pentru gRPC
            grpc_pass grpc://grpc_backend;
            error_page 502 = /error502grpc;

            # Headere necesare pentru gRPC
            grpc_set_header Host $host;
            grpc_set_header X-Real-IP $remote_addr;
            grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            grpc_set_header X-Forwarded-Proto $scheme;
        }

        # TrateazÄƒ erorile 502 specifice gRPC
        location = /error502grpc {
            internal;
            default_type application/grpc;
            add_header content-length 0;
            return 204;
        }
    }

    # Server pentru REST API
    server {
        listen 8080; # Port pentru API-ul REST

        location / {
            # Proxy pentru API-ul REST
            proxy_pass http://rest_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}